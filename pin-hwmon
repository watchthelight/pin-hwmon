#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging functions
info() { if [[ $QUIET == false ]]; then echo -e "${BLUE}[INFO]${NC} $*" >&2; fi; }
ok() { if [[ $QUIET == false ]]; then echo -e "${GREEN}[OK]${NC} $*" >&2; fi; }
warn() { if [[ $QUIET == false ]]; then echo -e "${YELLOW}[WARN]${NC} $*" >&2; fi; }
err() { echo -e "${RED}[FAIL]${NC} $*" >&2; exit 1; }

easter_egg() {
  cat << 'EOF'
   /\_/\
  ( o.o )
   > ^ <
EOF
}

# Parse flags
QUIET=false
NO_EGG=false
DRY_RUN=false
RELINK=true

while [[ $# -gt 0 ]]; do
  case $1 in
    --quiet) QUIET=true ;;
    --no-egg) NO_EGG=true ;;
    --dry-run) DRY_RUN=true ;;
    --relink) RELINK=true ;;
    *) err "Unknown option: $1" ;;
  esac
  shift
done

if [[ $NO_EGG == false ]]; then
  easter_egg
fi

# Functions
find_hwmon_by_names() {
  local pattern=$1
  for hwmon in /sys/class/hwmon/hwmon*; do
    if [[ -f "$hwmon/name" ]] && grep -qE "$pattern" "$hwmon/name"; then
      echo "$hwmon"
      return 0
    fi
  done
  return 1
}

pick_temp_input() {
  local base_dir=$1
  local labels=("Tctl" "Tdie" "Composite" "Junction" "junction" "Edge" "edge")
  for label in "${labels[@]}"; do
    for temp in "$base_dir"/temp*_input; do
      if [[ -f "$temp" ]] && [[ -f "${temp%_input}_label" ]] && grep -q "$label" "${temp%_input}_label"; then
        echo "$temp"
        return 0
      fi
    done
  done
  # Else first temp*_input
  for temp in "$base_dir"/temp*_input; do
    if [[ -f "$temp" ]]; then
      echo "$temp"
      return 0
    fi
  done
  return 1
}

link_force() {
  local target=$1
  local link=$2
  if [[ $DRY_RUN == true ]]; then
    echo "Would run: ln -sfn '$target' '$link'"
  else
    ln -sfn "$target" "$link"
  fi
}

# Main
if [[ ! -d /etc/hwmon ]]; then
  if [[ $DRY_RUN == false ]]; then
    mkdir -p /etc/hwmon
    chmod 755 /etc/hwmon
  else
    echo "Would create /etc/hwmon"
  fi
fi

# CPU
cpu_hwmon=$(find_hwmon_by_names "(k10temp|zenpower)")
if [[ -z $cpu_hwmon ]]; then
  err "No CPU hwmon found"
fi
info "CPU hwmon found: $cpu_hwmon (name=$(cat "$cpu_hwmon/name"))"
cpu_temp=$(pick_temp_input "$cpu_hwmon")
if [[ -z $cpu_temp ]]; then
  err "No CPU temp input found"
fi
link_force "$cpu_hwmon" /etc/hwmon/cpu
link_force "$cpu_temp" /etc/hwmon/cpu_tctl
ok "Linked /etc/hwmon/cpu -> $cpu_hwmon"
ok "Linked /etc/hwmon/cpu_tctl -> $cpu_temp"

# GPU
gpu_hwmon=$(find_hwmon_by_names "amdgpu")
if [[ -z $gpu_hwmon ]]; then
  warn "No amdgpu hwmon found; skipping GPU link"
else
  info "GPU hwmon found: $gpu_hwmon (name=$(cat "$gpu_hwmon/name"))"
  gpu_temp=$(pick_temp_input "$gpu_hwmon")
  if [[ -z $gpu_temp ]]; then
    warn "No GPU temp input found; skipping GPU link"
  else
    link_force "$gpu_hwmon" /etc/hwmon/gpu
    link_force "$gpu_temp" /etc/hwmon/gpu_temp
    ok "Linked /etc/hwmon/gpu -> $gpu_hwmon"
    ok "Linked /etc/hwmon/gpu_temp -> $gpu_temp"
  fi
fi

ok "Hwmon pinning complete"
